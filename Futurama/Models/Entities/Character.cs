// <auto-generated />

#nullable enable

using ProblemDetailsApiDemo.Futurama.Models.Enums;
using ProblemDetailsApiDemo.Futurama.Models.Serialization;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace ProblemDetailsApiDemo.Futurama.Models.Entities;

public class Character
{
    [JsonPropertyName("name")]
    public required Name Name { get; set; }

    [JsonPropertyName("images")]
    public required Images Images { get; set; }

    [JsonPropertyName("gender")]
    public required Gender Gender { get; set; }

    [JsonPropertyName("species")]
    public required string Species { get; set; }

    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    [JsonPropertyName("homePlanet")]
    public string? HomePlanet { get; set; }

    [JsonPropertyName("occupation")]
    public required string Occupation { get; set; }

    [JsonPropertyName("sayings")]
    public required List<string> Sayings { get; set; }

    [JsonPropertyName("id")]
    public required long Id { get; set; }

    [JsonPropertyName("age")]
    public required string Age { get; set; }

    public static List<Character>? FromJson(string json) =>
        JsonSerializer.Deserialize<List<Character>>(json, Converter.Settings);
}

public class Name
{
    [JsonPropertyName("first")]
    public required string First { get; set; }

    [JsonPropertyName("middle")]
    public required string Middle { get; set; }

    [JsonPropertyName("last")]
    public required string Last { get; set; }
}

public class Images
{
    [JsonPropertyName("head-shot")]
    public required string HeadShot { get; set; }

    [JsonPropertyName("main")]

    public required Uri Main { get; set; }
}

public static class CharacterExtensions
{
    public static string ToJson(this List<Character> self) =>
        JsonSerializer.Serialize(self, Converter.Settings);
}
